import{_ as e,c as a,o as n,a as l}from"./app-D16NT2N0.js";const r={},s=l(`<h1 id="qml-安卓应用构建与运行" tabindex="-1"><a class="header-anchor" href="#qml-安卓应用构建与运行"><span>QML 安卓应用构建与运行</span></a></h1><h2 id="构建qml安卓应用" tabindex="-1"><a class="header-anchor" href="#构建qml安卓应用"><span>构建QML安卓应用</span></a></h2><p>QtCreator会使用Gradle来进行项目构建，当你准备好了项目代码，在Qtcreator中选择好用于构建的安卓套件，点击构建，QtCreator会为你产生一些Gradle的配置文件，同时你可能会遇到的这样的报错</p><blockquote><p>Execution failed for task &#39;:processDebugResources&#39;. A failure occurred while executing com.android.build.gradle.internal.res.LinkApplicationAndroidResourcesTask$TaskAction Android resource linking failed aapt2 E 07-23 15:59:44 51907 51907 LoadedArsc.cpp:94] RES_TABLE_TYPE_TYPE entry offsets overlap actual entry data. aapt2 E 07-23 15:59:44 51907 51907 ApkAssets.cpp:149] Failed to load resources table in APK &#39;/home/zhy/Android/Sdk/platforms/android-35/android.jar&#39;.</p></blockquote><p>这是因为目前使用的Gradle插件版本不支持android-35 见<a href="https://stackoverflow.com/questions/54152209/how-to-fix-execution-failed-for-task-appprocessdebugresources-android-re" target="_blank" rel="noopener noreferrer">How to fix &quot;Execution failed for task &#39;:app:processDebugResources&#39;. &gt; Android resource linking failed&quot;[Android/Flutter] - Stack Overflow</a></p><p>这时需要修改Gradle配置文件 进入项目的/build/Qt_6_7_2_Clang_arm64_v8a-Debug/android-build文件夹下</p><p>打开build.gradle文件</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">dependencies {</span>
<span class="line">        classpath &#39;com.android.tools.build:gradle:7.4.1&#39;</span>
<span class="line">    }</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>com.android.tools.build:gradle:7.4.1是安卓Gradle插件（Android Gradle Plugin，AGP) 可以看到，默认的插件版本是7.4.1，这是22年的版本，已经比较老了。 最新的版本可以在这里查看：<a href="https://mvnrepository.com/artifact/com.android.tools.build/gradle?repo=google" target="_blank" rel="noopener noreferrer">Maven Repository: com.android.tools.build » gradle</a> 将插件版本更新为较新版本，如，修改build.gradle：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">    dependencies {</span>
<span class="line">        classpath &#39;com.android.tools.build:gradle:8.4.1&#39;</span>
<span class="line">    }</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>除此之外，升级插件版本还要检查<a href="https://gradle.org/releases/" target="_blank" rel="noopener noreferrer">gradle版本</a>是否支持这个插件的版本 其关系可以在这里查看：<a href="https://developer.android.com/build/releases/gradle-plugin#updating-gradle" target="_blank" rel="noopener noreferrer">Android Gradle plugin 8.5 release notes  |  Android Studio  |  Android Developers</a></p><blockquote><p>参考<a href="https://stackoverflow.com/questions/70545646/could-not-find-com-android-tools-buildgradle7-3-3-error-found-in-build-gradle" target="_blank" rel="noopener noreferrer">Could not find com.android.tools.build:gradle:7.3.3. error found in build.gradle file - Stack Overflow</a></p></blockquote><p>因此，我们至少要使用8.6版本的Gradle来支持这个插件。</p><p>进入./gradle/wrapper文件夹下，修改gradle-warpper.properties文件，这里定义了项目使用的gradle版本</p><p>将distributionUrl=https://services.gradle.org/distributions/gradle-8.3-bin.zip 修改为 distributionUrl=https://services.gradle.org/distributions/gradle-8.6-bin.zip</p><blockquote><p>对于国内的用户，推荐使用<a href="https://mirrors.cloud.tencent.com/gradle/" target="_blank" rel="noopener noreferrer">腾讯云的Gradle镜像</a> 修改为distributionUrl=https://mirrors.cloud.tencent.com/gradle/gradle-8.6-all.zip</p></blockquote><p>此时再点击构建，会自动下载对应版本的Gradle，然后再下载需要的Gradle插件。</p><p>如果成功的话，就可以在./build/outputs/apk/debug下找到构建好的apk了</p><p>对于国内的用户，gradle默认的下载仓库地址可能会导致下载失败或下载缓慢，可以在build.gradle文件中，增加阿里云的下载地址：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">repositories {</span>
<span class="line">        mavenCentral()</span>
<span class="line">        maven { url &#39;https://maven.aliyun.com/repository/public/&#39; }</span>
<span class="line">        maven { url &#39;https://maven.aliyun.com/repository/central&#39; }</span>
<span class="line">        maven { url &#39;https://maven.aliyun.com/repository/gradle-plugin&#39; }</span>
<span class="line">        mavenLocal()</span>
<span class="line">        google()</span>
<span class="line">}</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="运行安装apk" tabindex="-1"><a class="header-anchor" href="#运行安装apk"><span>运行安装apk</span></a></h2><p>在Linux环境下，可以使用adb命令安装APK到安卓设备，当然，你也可以选择使用Qtcreator一键运行。</p><p>在使用USB连接你的安卓设备后使用adb命令安装</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">adb <span class="token function">install</span> android-build-debug.apk</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>确保你的安卓设备打开了开发者模式，具体打开方式请根据自己设备型号搜索。</p>`,25),i=[s];function t(d,o){return n(),a("div",null,i)}const c=e(r,[["render",t],["__file","QML 安卓应用构建与运行.html.vue"]]),u=JSON.parse('{"path":"/zh/posts/QML%20%E5%AE%89%E5%8D%93%E5%BA%94%E7%94%A8%E6%9E%84%E5%BB%BA%E4%B8%8E%E8%BF%90%E8%A1%8C.html","title":"QML 安卓应用构建与运行","lang":"zh-CN","frontmatter":{"date":"2024-07-23T00:00:00.000Z","tag":["Android","QML"],"excerpt":"<p>有关如何在安卓上运行QML应用</p>","head":[["link",{"rel":"alternate","type":"application/atom+xml","href":"https://heeiya.github.io/KDEBlog/zh/atom.xml","title":"Blog Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://heeiya.github.io/KDEBlog/zh/feed.json","title":"Blog JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://heeiya.github.io/KDEBlog/zh/rss.xml","title":"Blog RSS Feed"}]]},"headers":[{"level":2,"title":"构建QML安卓应用","slug":"构建qml安卓应用","link":"#构建qml安卓应用","children":[]},{"level":2,"title":"运行安装apk","slug":"运行安装apk","link":"#运行安装apk","children":[]}],"git":{"updatedTime":1721830893000,"contributors":[{"name":"hanyang zhang","email":"hanyangzhang@qq.com","commits":1}]},"filePathRelative":"zh/posts/QML 安卓应用构建与运行.md"}');export{c as comp,u as data};
